{"version":3,"sources":["components/Input/index.tsx","webpack://modern-js-website/./src/containers/Login/index.module.css?78e9","containers/Login/index.tsx","utils/index.ts"],"names":["StyledDiv","styled","StyledLabel","StyledInput","label","name","onChange","value","placeholder","htmlFor","type","id","history","useHistory","useState","email","wx","github","identity","setIdentity","isButtonDisabled","setButtonDisabled","useEffect","initialValue","store","STORAGE_KEYS","toQuestions","api","code","msg","push","handleInputChange","key","e","prev","target","Layout","progress","backgroundStyle","background","whiteBgIcon","backgroundSize","className","styles","Logo","theme","LayoutTheme","href","colorTheme","ButtonTheme","width","onClick","disabled","InspireCloud","serviceId","baseURL"],"mappings":"yRAUMA,EAAYC,SAAH,4GAOTC,EAAcD,WAAH,qKAUXE,EAAcF,WAAH,iYAsCjB,EAhBc,SAAC,GAA+D,IAA7DG,EAA4D,EAA5DA,MAAOC,EAAqD,EAArDA,KAAMC,EAA+C,EAA/CA,SAAUC,EAAqC,EAArCA,MAAOC,EAA8B,EAA9BA,YAC7C,OACE,UAACR,EAAD,YACE,SAACE,EAAD,CAAaO,QAASJ,EAAtB,SAA6BD,KAC7B,SAACD,EAAD,CACEO,KAAK,QACLC,GAAIN,EACJA,KAAMA,EACNC,SAAUA,EACVC,MAAOA,EACPC,YAAaA,GAAe,qB,mGC1DpC,EAAwB,0BAAxB,EAAkG,yBAAlG,EAAgL,0BAAhL,EAA2P,wBAA3P,EAAwU,0BCiHxU,EArGc,WACZ,IAAMI,GAAUC,UAEhB,GAAgCC,cAAS,CACvCC,MAAO,GACPC,GAAI,GACJC,OAAQ,KAHV,eAAOC,EAAP,KAAiBC,EAAjB,KAMA,GAA8CL,eAAS,GAAvD,eAAOM,EAAP,KAAyBC,EAAzB,MAEAC,gBAAU,WACR,IAAMC,EAAeC,QAAUC,cAC3BF,GACFJ,EAAYI,KAEb,KAEHD,gBAAU,WACHJ,EAASH,OAAUG,EAASF,IAAOE,EAASD,OAG/CI,GAAkB,GAFlBA,GAAkB,KAInB,CAACH,IAEJ,IAAMQ,EAAW,mCAAG,yFACbN,EADa,wBAEhBI,QAAUC,aAAuBP,GAFjB,kBAIcS,QAAQ,uBAAwBT,GAJ9C,gBAINU,EAJM,EAINA,KAJM,EAIAC,IAED,MAATD,EACFhB,EAAQkB,KAAK,gBAEblB,EAAQkB,KAAK,cATD,kDAYdlB,EAAQkB,KAAK,cAZC,0DAAH,qDAiBXC,EAAoB,SAACC,EAAaC,GACtCd,GAAY,SAAAe,GAAI,yBACXA,GADW,cAEbF,EAAMC,EAAEE,OAAO5B,YAIpB,OACE,SAAC6B,EAAA,EAAD,CACEC,SAAQ,MACRC,gBAAiB,CACfC,WAAW,OAAD,OAASC,IAAT,YACVC,eAAgB,SAJpB,UAME,iBAAKC,UAAWC,EAAhB,WACE,gBAAKD,UAAWC,EAAhB,UACE,SAACC,EAAA,EAAD,CAAMC,MAAOC,eAEf,cAAGJ,UAAWC,EAAd,0EACA,eAAGD,UAAWC,EAAd,yEACa,KACX,cAAGI,KAAK,6CAA6CZ,OAAO,SAA5D,iCAFF,yBAOA,iBAAKO,UAAWC,EAAhB,WACE,SAAC,EAAD,CACEtC,KAAK,QACLD,MAAM,eACNE,SAAU,SAAA2B,GAAC,OAAIF,EAAkB,QAASE,IAC1C1B,MAAOW,EAASH,SAElB,SAAC,EAAD,CACEV,KAAK,KACLD,MAAM,qBACNE,SAAU,SAAA2B,GAAC,OAAIF,EAAkB,KAAME,IACvC1B,MAAOW,EAASF,MAElB,SAAC,EAAD,CACEX,KAAK,SACLD,MAAM,sBACNE,SAAU,SAAA2B,GAAC,OAAIF,EAAkB,SAAUE,IAC3C1B,MAAOW,EAASD,aAGpB,SAAC,IAAD,CACE+B,WAAYC,SACZC,MAAO,IACPC,QAASzB,EACT0B,SAAUhC,EAJZ,uC,gFChGKO,EAAM,I,MAAI0B,GAAJ,CAAiB,CAAEC,UAJpB,SAI+BC,QAFjC","file":"static/js/917.99b39282.js","sourcesContent":["import styled from '@jupiter/plugin-runtime/styled';\n\nexport interface InputProps {\n  name: string;\n  label: string;\n  value: string;\n  onChange: React.ChangeEventHandler;\n  placeholder?: string;\n}\n\nconst StyledDiv = styled.div`\n  width: 100%;\n  position: relative;\n  display: flex;\n  flex-direction: column;\n`;\n\nconst StyledLabel = styled.label`\n  height: 22px;\n  line-height: 22px;\n  color: #262627;\n  font-weight: 500;\n  font-size: 14px;\n  display: block;\n  margin-bottom: 8px;\n`;\n\nconst StyledInput = styled.input`\n  width: 100%;\n  border: 1px solid #000000;\n  outline: none;\n  height: 36px;\n  padding-left: 16px;\n  font-weight: 500;\n  font-size: 14px;\n  line-height: 22px;\n  color: #000000;\n  background-color: transparent;\n  appearance: none;\n  outline: none;\n  border-radius: unset;\n\n  &:hover,\n  &:focus,\n  &:active {\n    border: 1px solid #ffac46;\n  }\n`;\n\nconst Input = ({ label, name, onChange, value, placeholder }: InputProps) => {\n  return (\n    <StyledDiv>\n      <StyledLabel htmlFor={name}>{label}</StyledLabel>\n      <StyledInput\n        type=\"input\"\n        id={name}\n        name={name}\n        onChange={onChange}\n        value={value}\n        placeholder={placeholder || '选填'}\n      />\n    </StyledDiv>\n  );\n};\n\nexport default Input;\n","// extracted by mini-css-extract-plugin\nexport default {\"login\":\"_2bbkZXaJVlasOwoYeAwSCi\",\"logo-text\":\"_4zNAq9oHaeawMTKqK1vyR\",\"logoText\":\"_4zNAq9oHaeawMTKqK1vyR\",\"login-title\":\"_3A5aREMWH3HoPyJE91wGQ3\",\"loginTitle\":\"_3A5aREMWH3HoPyJE91wGQ3\",\"login-desc\":\"j2Vg9nPKkqKTIaLZuup8z\",\"loginDesc\":\"j2Vg9nPKkqKTIaLZuup8z\",\"input-group\":\"_1TxcwjSCAx-ax1laL64Xsh\",\"inputGroup\":\"_1TxcwjSCAx-ax1laL64Xsh\"};","import logoTextIcon from '@/assets/logo-text.svg';\nimport Input from '@/components/Input';\nimport Button, { ButtonTheme } from '@/components/button';\nimport Layout, { LayoutTheme } from '@/components/Layout';\nimport { useHistory } from '@jupiter/plugin-runtime/router';\nimport store from 'store';\nimport React, { useEffect, useState } from 'react';\nimport { STORAGE_KEYS } from '@/utils/contants';\nimport Logo from '@/components/Logo';\nimport whiteBgIcon from '@/assets/white-bg.svg';\nimport { api } from '@/utils';\nimport styles from './index.module.css';\n\nconst Login = () => {\n  const history = useHistory();\n\n  const [identity, setIdentity] = useState({\n    email: '',\n    wx: '',\n    github: '',\n  });\n\n  const [isButtonDisabled, setButtonDisabled] = useState(true);\n\n  useEffect(() => {\n    const initialValue = store.get(STORAGE_KEYS.IDENTITY);\n    if (initialValue) {\n      setIdentity(initialValue);\n    }\n  }, []);\n\n  useEffect(() => {\n    if (!identity.email && !identity.wx && !identity.github) {\n      setButtonDisabled(true);\n    } else {\n      setButtonDisabled(false);\n    }\n  }, [identity]);\n\n  const toQuestions = async () => {\n    if (!isButtonDisabled) {\n      store.set(STORAGE_KEYS.IDENTITY, identity);\n      try {\n        const { code, msg } = await api.run('update-research-item', identity);\n\n        if (code === 200) {\n          history.push('/questions/0');\n        } else {\n          history.push('/success/0');\n        }\n      } catch (err) {\n        history.push('/success/0');\n      }\n    }\n  };\n\n  const handleInputChange = (key: string, e: React.BaseSyntheticEvent) => {\n    setIdentity(prev => ({\n      ...prev,\n      [key]: e.target.value,\n    }));\n  };\n\n  return (\n    <Layout\n      progress={`10%`}\n      backgroundStyle={{\n        background: `url(${whiteBgIcon}) repeat`,\n        backgroundSize: 'cover',\n      }}>\n      <div className={styles.login}>\n        <div className={styles.logoText}>\n          <Logo theme={LayoutTheme.Light} />\n        </div>\n        <p className={styles.loginTitle}>现代 Web 开发者问卷调查</p>\n        <p className={styles.loginDesc}>\n          问卷调查报告之后会在{' '}\n          <a href=\"https://github.com/modern-js-dev/modern.js\" target=\"_blank\">\n            Github 项目\n          </a>\n          里发布\n        </p>\n        <div className={styles.inputGroup}>\n          <Input\n            name=\"email\"\n            label=\"邮箱\"\n            onChange={e => handleInputChange('email', e)}\n            value={identity.email}\n          />\n          <Input\n            name=\"wx\"\n            label=\"微信号\"\n            onChange={e => handleInputChange('wx', e)}\n            value={identity.wx}\n          />\n          <Input\n            name=\"github\"\n            label=\"Github 主页\"\n            onChange={e => handleInputChange('github', e)}\n            value={identity.github}\n          />\n        </div>\n        <Button\n          colorTheme={ButtonTheme.Dark}\n          width={330}\n          onClick={toQuestions}\n          disabled={isButtonDisabled}>\n          下一步\n        </Button>\n      </div>\n    </Layout>\n  );\n};\n\nexport default Login;\n","import InspireCloud from '@byted/inspirecloud';\n\nconst serviceId = 'ttrbon'; // 替换成你的 serviceId，可在后台「设置」页面获取\n\nconst baseURL = 'https://modernjs.bytedance.com/api';\n\nexport const api = new InspireCloud({ serviceId, baseURL });\n"],"sourceRoot":""}